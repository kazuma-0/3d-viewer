/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 ./shield.glb --transform --types
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Circle001: THREE.Mesh;
    Circle001_1: THREE.Mesh;
    Circle001_2: THREE.Mesh;
    Circle001_3: THREE.Mesh;
    Circle001_4: THREE.Mesh;
    Circle001_5: THREE.Mesh;
  };
  materials: {
    shield: THREE.MeshStandardMaterial;
    ['front sphere']: THREE.MeshStandardMaterial;
    Leaf: THREE.MeshStandardMaterial;
    rounds: THREE.MeshStandardMaterial;
    ring: THREE.MeshStandardMaterial;
    ['All Over Slime']: THREE.MeshStandardMaterial;
  };
};

export default function Shield(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('shield-transformed.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[0, 24.59, 0]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Circle001.geometry} material={materials.shield} />
        <mesh
          geometry={nodes.Circle001_1.geometry}
          material={materials['front sphere']}
        />
        <mesh geometry={nodes.Circle001_2.geometry} material={materials.Leaf} />
        <mesh
          geometry={nodes.Circle001_3.geometry}
          material={materials.rounds}
        />
        <mesh geometry={nodes.Circle001_4.geometry} material={materials.ring} />
        <mesh
          geometry={nodes.Circle001_5.geometry}
          material={materials['All Over Slime']}
        />
      </group>
    </group>
  );
}

useGLTF.preload('shield-transformed.glb');
